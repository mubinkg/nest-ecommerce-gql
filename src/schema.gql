# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TicketType {
  _id: String!
  title: String!
}

type Customer {
  _id: String!
  name: String
  email: String
  mobile_no: String
  password: String
  country_code: String
  currency: String
  language: String
  dob: DateTime
  height: Float
  weight: Float
  shoe_size: Float
  favourite_k_pop_group: String
  flavor: String
  referral_code: String
  friends_code: String
  status: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TicketCustomer {
  user_name: String
}

type Ticket {
  _id: String!
  ticket_type: TicketType
  user: TicketCustomer
  subject: String
  email: String
  description: String
  status: String
  created_at: DateTime
}

type Product {
  _id: String
  category_id: String
  tax: Float
  type: String
  stock_type: Float
  name: String
  short_description: String
  indicator: String
  cod_allowed: Float
  minimum_order_quantity: Float
  quantity_step_size: Float
  total_allowed_quantity: Float
  is_prices_inclusive_tax: Boolean
  is_returnable: Boolean
  is_cancelable: Boolean
  cancelable_till: DateTime
  image: String
  video_type: String
  video: String
  tags: String
  warranty_period: String
  made_in: String
  sku: String
  stock: Float
  availability: Float
  description: String
  deliverable_type: String
  deliverable_zipcodes: String
  seller_id: String
  variant_id: String
}

type ProductVariant {
  """Regular Price"""
  _id: String!

  """Regular Price"""
  price: Float!

  """Price after discount"""
  specialPrice: Float

  """Unit (kg)"""
  weight: Float

  """"""
  height: Float

  """"""
  breadth: Float

  """"""
  length: Float

  """Stock Keeping Unit"""
  sku: String

  """"""
  totalStock: Float

  """"""
  stockStatus: String

  """If variants is missing it will be general variant"""
  attributeReference: String

  """Product Reference Id"""
  productId: String
}

type Area {
  _id: String!
  area_name: String
  city_id: String
  zipcode_id: String
  minimum_free_delivery_order_amount: Float
  delivery_charges: Float
}

type City {
  _id: String!
  city_name: String
}

type AuthResponseDto {
  access_token: String!
  customer: Customer
}

type Category {
  _id: String!
  name: String
  order: Float
  image: String
  banner: String
  parent: String
  status: String
}

type CategoriesResponse {
  _id: String!
  name: String
  order: Float
  image: String
  banner: String
  parent: String
  status: String

  """Children Array are same as category"""
  children: [Category!]!
}

type Address {
  _id: String!
  user: Customer
  type: String
  name: String
  country_code: String
  alternate_mobile: String
  address: String
  landmark: String
  area: Area
  city: City
  city_name: String
  area_name: String
  pincode_name: String
  pincode: String
  state: String
  country: String
  is_default: Int
}

type SliderType {
  _id: String!
  type: String
  type_id: Float
}

type Slider {
  _id: String!
  slider_type: SliderType
  image: String
  link: String
}

type Brand {
  _id: String!
  name: String
  image: String
}

type Rating {
  _id: String!
  product_id: String
  user_id: String
  rating: Float
  comment: String
  images: [String!]
  imageUrl: [String!]
  status: String
}

type PromoCode {
  _id: String
  promoCode: String
  message: String
  image: String
  discountType: DiscountType
  discountAmount: Float
  startDate: DateTime
  endDate: DateTime
  minOrderAmount: Float
  maxOrderAmount: Float
  numberOfUsers: Float
  numberOfUsedUser: Float
  usedUsers: [String!]
  repeatUsage: RepeatUsage
  numberOfRepeatUsage: Float
  isCashBack: Boolean
  status: ActiveStatus
  createdAt: DateTime
}

enum DiscountType {
  PERCENTAGE
  AMOUNT
}

enum RepeatUsage {
  ALLOWED
  NOT_ALLOWED
}

enum ActiveStatus {
  ACTIVE
  INACTIVE
}

type Favourite {
  _id: String
  product_id: String
  user_Id: String
}

type Query {
  tickets: [Ticket!]!
  ticket(id: Int!): Ticket!
  getTicketTypes(limit: Float!, offset: Float!): [TicketType!]!
  products: [Product!]!
  product(id: Int!): Product!
  productVariants: [ProductVariant!]!
  productVariant(id: Int!): ProductVariant!
  areas: [Area!]!
  areaByCityId(city_id: String!): [Area!]!
  getCities(limit: Float!, offset: Float!, query: String!): [City!]!
  city(id: Int!): City!
  signIn(signinInput: SignInDto!): AuthResponseDto!
  categories: [CategoriesResponse!]!
  getAddresses(user_id: String!, limit: Float!, offset: Float!): [Address!]!
  sliders(limit: Float!, offset: Float!): [Slider!]!
  sliderTypeList(limit: Float!, offset: Float!): [SliderType!]!
  brands(limit: Float!, offset: Float!): [Brand!]!
  ratings(ratingFilterDto: RatingFilterDto!): [Rating!]!
  rating(id: Int!): Rating!
  promoCode(id: Int!): PromoCode!
  favourites: [Favourite!]!
  favourite(id: Int!): Favourite!
}

input SignInDto {
  mobile_no: String!
  password: String!
}

input RatingFilterDto {
  product_id: String
  user_id: String
  limit: Float = 25
  offset: Float = 0
  sort: SortingType! = CreateAt
  order: SortingOrder! = DESC
}

enum SortingType {
  CreateAt
}

enum SortingOrder {
  DESC
  ASC
}

type Mutation {
  createTicket(createTicketInput: CreateTicketInput!): Ticket!
  updateTicket(updateTicketInput: UpdateTicketInput!): Ticket!
  removeTicket(id: Int!): Ticket!
  createTicketType(createTicketTypeInput: CereateTicketTypeInput!): TicketType!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createProductVariant(createProductVariantInput: CreateProductVariantInput!): ProductVariant!
  removeProductVariant(id: Int!): ProductVariant!
  createArea(createAreaInput: CreateAreaInput!): Area!
  updateArea(updateAreaInput: UpdateAreaInput!): Area!
  removeArea(id: Int!): Area!
  createCity(createCityInput: CreateCityInput!): City!
  updateCity(updateCityInput: UpdateCityInput!): City!
  removeCity(id: Int!): City!
  registerUser(createCustomerInput: CreateCustomerInput!): AuthResponseDto!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: String!): Address!
  createSlider(createSliderInput: CreateSliderInput!): Slider!
  createSliderType(createSliderType: CreateSliderTypeInput!): SliderType!
  createBrand(createBrandInput: CreateBrandInput!): Brand!
  createRating(createRatingInput: CreateRatingInput!): Rating!
  deleteRating(id: String!): String!
  updateRating(updateRatingInput: UpdateRatingInput!): Rating!
  removeRating(id: Int!): Rating!
  createPromoCode(createPromoCodeInput: CreatePromoCodeInput!): PromoCode!
  validatePromoCode(code: String!, orderFinalAmount: Float!): PromoCode!
  updatePromoCode(updatePromoCodeInput: UpdatePromoCodeInput!): PromoCode!
  removePromoCode(id: Int!): PromoCode!
  createFavourite(createFavouriteInput: CreateFavouriteInput!): Favourite!
  updateFavourite(updateFavouriteInput: UpdateFavouriteInput!): Favourite!
  removeFavourite(id: String!): String!
}

input CreateTicketInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTicketInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CereateTicketTypeInput {
  title: String!
}

input CreateProductInput {
  category_id: String
  tax: Float
  type: String
  stock_type: Float
  name: String
  short_description: String
  indicator: String
  cod_allowed: Float
  minimum_order_quantity: Float
  quantity_step_size: Float
  total_allowed_quantity: Float
  is_prices_inclusive_tax: Boolean
  is_returnable: Boolean
  is_cancelable: Boolean
  cancelable_till: DateTime
  image: String
  video_type: String
  video: String
  tags: String
  warranty_period: String
  made_in: String
  sku: String
  stock: Float
  availability: Float
  description: String
  deliverable_type: String
  deliverable_zipcodes: String
  seller_id: String
  variant_id: String

  """Product Variants Details"""
  createProductVariantInput: CreateProductVariantInput!
}

input CreateProductVariantInput {
  """Regular Price"""
  price: Float!

  """Price after discount"""
  specialPrice: Float

  """Unit (kg)"""
  weight: Float

  """"""
  height: Float

  """"""
  breadth: Float

  """"""
  length: Float

  """Stock Keeping Unit"""
  sku: String

  """"""
  totalStock: Float

  """"""
  stockStatus: StockStatus

  """If variants is missing it will be general variant"""
  attributeReference: String

  """Product Reference Id"""
  productId: String
}

enum StockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

input UpdateProductInput {
  category_id: String
  tax: Float
  type: String
  stock_type: Float
  name: String
  short_description: String
  indicator: String
  cod_allowed: Float
  minimum_order_quantity: Float
  quantity_step_size: Float
  total_allowed_quantity: Float
  is_prices_inclusive_tax: Boolean
  is_returnable: Boolean
  is_cancelable: Boolean
  cancelable_till: DateTime
  image: String
  video_type: String
  video: String
  tags: String
  warranty_period: String
  made_in: String
  sku: String
  stock: Float
  availability: Float
  description: String
  deliverable_type: String
  deliverable_zipcodes: String
  seller_id: String
  variant_id: String

  """Product Variants Details"""
  createProductVariantInput: CreateProductVariantInput
  id: Int!
}

input CreateAreaInput {
  area_name: String
  city_id: String
  zipcode_id: String
  minimum_free_delivery_order_amount: Float
  delivery_charges: Float
}

input UpdateAreaInput {
  area_name: String
  city_id: String
  zipcode_id: String
  minimum_free_delivery_order_amount: Float
  delivery_charges: Float
  id: Int!
}

input CreateCityInput {
  city_name: String
}

input UpdateCityInput {
  city_name: String
  id: Int!
}

input CreateCustomerInput {
  name: String!
  email: String
  mobile_no: String!
  password: String!
  country_code: String!
  currency: String!
  language: String!
  dob: DateTime
  height: Float
  weight: Float
  shoe_size: Float
  favourite_k_pop_group: String
  flavor: String
  referral_code: String
  friends_code: String
}

input CreateCategoryInput {
  name: String!
  image: Upload
  banner: Upload
  parent: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateAddressInput {
  user_id: String!
  type: String
  name: String
  country_code: String
  alternate_mobile: String
  address: String
  landmark: String
  area_id: String
  city_id: String
  city_name: String
  area_name: String
  pincode_name: String
  pincode: String
  state: String
  country: String
  is_default: Int
}

input UpdateAddressInput {
  user_id: String
  type: String
  name: String
  country_code: String
  alternate_mobile: String
  address: String
  landmark: String
  area_id: String
  city_id: String
  city_name: String
  area_name: String
  pincode_name: String
  pincode: String
  state: String
  country: String
  is_default: Int
  id: String!
}

input CreateSliderInput {
  slider_type: String
  image: Upload
  link: String
}

input CreateSliderTypeInput {
  type: String!
  type_id: Float!
}

input CreateBrandInput {
  name: String!
  image: Upload
}

input CreateRatingInput {
  product_id: String
  user_id: String
  rating: Float
  comment: String
  images: [ImageInput!]
  imageUrl: [String!]
}

input ImageInput {
  image: Upload
}

input UpdateRatingInput {
  product_id: String
  user_id: String
  rating: Float
  comment: String
  images: [ImageInput!]
  imageUrl: [String!]
  id: Int!
}

input CreatePromoCodeInput {
  promoCode: String!
  message: String!
  image: Upload!
  discountType: DiscountType!
  discountAmount: Float!
  startDate: DateTime!
  endDate: DateTime!
  minOrderAmount: Float!
  maxOrderAmount: Float!
  numberOfUsers: Float!
  repeatUsage: RepeatUsage!
  numberOfRepeatUsage: Float! = 0
  isCashBack: Boolean! = false
  status: ActiveStatus!
}

input UpdatePromoCodeInput {
  promoCode: String
  message: String
  image: Upload
  discountType: DiscountType
  discountAmount: Float
  startDate: DateTime
  endDate: DateTime
  minOrderAmount: Float
  maxOrderAmount: Float
  numberOfUsers: Float
  repeatUsage: RepeatUsage
  numberOfRepeatUsage: Float = 0
  isCashBack: Boolean = false
  status: ActiveStatus
  id: Int!
}

input CreateFavouriteInput {
  product_id: String
  user_Id: String
}

input UpdateFavouriteInput {
  product_id: String
  user_Id: String
  id: String!
}